{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xC53B633C73E14663580c1E6B123a4d693Ac608D5",
    "txHash": "0x2f29fa8be2cd820e6e37935cfd1419b7285b5167802c7c9b8d2ef823425ceeb7"
  },
  "proxies": [
    {
      "address": "0x7504E80CfEC32fa754FFcf866534Dcb3c7c3aF22",
      "txHash": "0x2bdd872be3e1af951288692e37ac5b0c1f5f0f9bee267f5765ea105287f652e4",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f99c01abf370a1155c6c3b4a929d1bbda439bc95fc4a1771cd44756d82a08840": {
      "address": "0x04F9B10D3aDA7d9A399Cb5cEF6683aA914E0fCFa",
      "txHash": "0xea864430921913af27bb65679512a3feb34e53ea11c3dabe19e6beedcf849d5c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "contractPrice",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:16"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "202",
            "type": "t_struct(Counter)1799_storage",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:32"
          },
          {
            "label": "nextPostId",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:33"
          },
          {
            "label": "allCurations",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_struct(Edition)2107_storage)dyn_storage",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:34"
          },
          {
            "label": "editions",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_struct(Edition)2107_storage)",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:38"
          },
          {
            "label": "nftHolders",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:40"
          },
          {
            "label": "curatorSubmissions",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_array(t_struct(Edition)2107_storage)dyn_storage)",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:42"
          },
          {
            "label": "withdrawnForEdition",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:46"
          },
          {
            "label": "tokenToSong",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_array(t_struct(Edition)2107_storage)dyn_storage": {
            "label": "struct Phlote.Edition[]"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_struct(Edition)2107_storage)dyn_storage)": {
            "label": "mapping(address => struct Phlote.Edition[])"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_struct(Edition)2107_storage)": {
            "label": "mapping(uint256 => struct Phlote.Edition)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)1799_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(Edition)2107_storage": {
            "label": "struct Phlote.Edition",
            "members": [
              {
                "label": "curatorWallet",
                "type": "t_address"
              },
              {
                "label": "artistWallet",
                "type": "t_address"
              },
              {
                "label": "mediaURI",
                "type": "t_string_storage"
              },
              {
                "label": "marketplace",
                "type": "t_string_storage"
              },
              {
                "label": "tags",
                "type": "t_array(t_string_storage)dyn_storage"
              },
              {
                "label": "artistName",
                "type": "t_string_storage"
              },
              {
                "label": "mediaType",
                "type": "t_string_storage"
              },
              {
                "label": "mediaTitle",
                "type": "t_string_storage"
              },
              {
                "label": "numSold",
                "type": "t_uint256"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage"
              },
              {
                "label": "submissionTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "09345f41c834f97215eb749306c13683f81a2b573eb6ab42b688076a11c7fbd4": {
      "address": "0xf7F1aFDDE002Cddb789780E01303EB9D1642a306",
      "txHash": "0xc9a0bf9a11ac783820108614fafd4eafc98fc54f260b513893dcc2c4d8765d6a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "contractPrice",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:16"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "202",
            "type": "t_struct(Counter)1799_storage",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:32"
          },
          {
            "label": "nextPostId",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:33"
          },
          {
            "label": "allCurations",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_struct(Edition)2107_storage)dyn_storage",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:34"
          },
          {
            "label": "editions",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_struct(Edition)2107_storage)",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:38"
          },
          {
            "label": "nftHolders",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:40"
          },
          {
            "label": "curatorSubmissions",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_array(t_struct(Edition)2107_storage)dyn_storage)",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:42"
          },
          {
            "label": "withdrawnForEdition",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:46"
          },
          {
            "label": "tokenToSong",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Phlote",
            "src": "contracts/Phlote.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_array(t_struct(Edition)2107_storage)dyn_storage": {
            "label": "struct Phlote.Edition[]"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_struct(Edition)2107_storage)dyn_storage)": {
            "label": "mapping(address => struct Phlote.Edition[])"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_uint256,t_struct(Edition)2107_storage)": {
            "label": "mapping(uint256 => struct Phlote.Edition)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)1799_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(Edition)2107_storage": {
            "label": "struct Phlote.Edition",
            "members": [
              {
                "label": "curatorWallet",
                "type": "t_address"
              },
              {
                "label": "artistWallet",
                "type": "t_address"
              },
              {
                "label": "mediaURI",
                "type": "t_string_storage"
              },
              {
                "label": "marketplace",
                "type": "t_string_storage"
              },
              {
                "label": "tags",
                "type": "t_array(t_string_storage)dyn_storage"
              },
              {
                "label": "artistName",
                "type": "t_string_storage"
              },
              {
                "label": "mediaType",
                "type": "t_string_storage"
              },
              {
                "label": "mediaTitle",
                "type": "t_string_storage"
              },
              {
                "label": "numSold",
                "type": "t_uint256"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage"
              },
              {
                "label": "submissionTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    }
  }
}
