/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PhloteVote, PhloteVoteInterface } from "../PhloteVote";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610140604052620000136012600a6200050f565b6200002290620222e062000527565b6008553480156200003257600080fd5b506040518060400160405280600b81526020016a50686c6f746520566f746560a81b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600b81526020016a50686c6f746520566f746560a81b8152506040518060400160405280600381526020016250563160e81b8152508160039080519060200190620000ca92919062000354565b508051620000e090600490602084019062000354565b50506005805460ff1916905550620000f8336200019e565b815160209283012081519183019190912060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818801819052818301969096526060810194909452608080850193909352308483018190528151808603909301835260c094850190915281519190950120905291909152610120525060085462000198903390620001f8565b620005a1565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620002545760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b6200026260008383620002ef565b806002600082825462000276919062000549565b90915550506001600160a01b03821660009081526020819052604081208054839290620002a590849062000549565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60055460ff1615620003375760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016200024b565b6200034f8383836200034f60201b620008191760201c565b505050565b828054620003629062000564565b90600052602060002090601f016020900481019282620003865760008555620003d1565b82601f10620003a157805160ff1916838001178555620003d1565b82800160010185558215620003d1579182015b82811115620003d1578251825591602001919060010190620003b4565b50620003df929150620003e3565b5090565b5b80821115620003df5760008155600101620003e4565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000451578160001904821115620004355762000435620003fa565b808516156200044357918102915b93841c939080029062000415565b509250929050565b6000826200046a5750600162000509565b81620004795750600062000509565b81600181146200049257600281146200049d57620004bd565b600191505062000509565b60ff841115620004b157620004b1620003fa565b50506001821b62000509565b5060208310610133831016604e8410600b8410161715620004e2575081810a62000509565b620004ee838362000410565b8060001904821115620005055762000505620003fa565b0290505b92915050565b60006200052060ff84168362000459565b9392505050565b6000816000190483118215151615620005445762000544620003fa565b500290565b600082198211156200055f576200055f620003fa565b500190565b600181811c908216806200057957607f821691505b602082108114156200059b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516116a8620005f16000396000610c1f01526000610c6e01526000610c4901526000610ba201526000610bcc01526000610bf601526116a86000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c357806395d89b411161007c57806395d89b41146102b9578063a457c2d7146102c1578063a9059cbb146102d4578063d505accf146102e7578063dd62ed3e146102fa578063f2fde38b1461030d57600080fd5b806370a0823114610231578063715018a61461025a57806379cc6790146102625780637ecebe00146102755780638456cb59146102885780638da5cb5b1461029057600080fd5b80633644e515116101155780633644e515146101db57806339509351146101e35780633f4ba83a146101f657806340c10f191461020057806342966c68146102135780635c975abb1461022657600080fd5b806306fdde031461015d578063095ea7b31461017b57806318160ddd1461019e57806323b872dd146101b0578063313ce567146101c357806332cb6b0c146101d2575b600080fd5b610165610320565b60405161017291906113f5565b60405180910390f35b61018e610189366004611466565b6103b2565b6040519015158152602001610172565b6002545b604051908152602001610172565b61018e6101be366004611490565b6103ca565b60405160128152602001610172565b6101a260085481565b6101a26103ee565b61018e6101f1366004611466565b6103fd565b6101fe61041f565b005b6101fe61020e366004611466565b610462565b6101fe6102213660046114cc565b6104a0565b60055460ff1661018e565b6101a261023f3660046114e5565b6001600160a01b031660009081526020819052604090205490565b6101fe6104ad565b6101fe610270366004611466565b6104e7565b6101a26102833660046114e5565b6104fc565b6101fe61051c565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610172565b610165610554565b61018e6102cf366004611466565b610563565b61018e6102e2366004611466565b6105de565b6101fe6102f5366004611507565b6105ec565b6101a261030836600461157a565b610750565b6101fe61031b3660046114e5565b61077b565b60606003805461032f906115ad565b80601f016020809104026020016040519081016040528092919081815260200182805461035b906115ad565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b5050505050905090565b6000336103c081858561081e565b5060019392505050565b6000336103d8858285610942565b6103e38585856109bc565b506001949350505050565b60006103f8610b95565b905090565b6000336103c08185856104108383610750565b61041a91906115f8565b61081e565b6005546001600160a01b036101009091041633146104585760405162461bcd60e51b815260040161044f90611610565b60405180910390fd5b610460610cbc565b565b6005546001600160a01b036101009091041633146104925760405162461bcd60e51b815260040161044f90611610565b61049c8282610d4f565b5050565b6104aa3382610e3a565b50565b6005546001600160a01b036101009091041633146104dd5760405162461bcd60e51b815260040161044f90611610565b6104606000610f94565b6104f2823383610942565b61049c8282610e3a565b6001600160a01b0381166000908152600660205260408120545b92915050565b6005546001600160a01b0361010090910416331461054c5760405162461bcd60e51b815260040161044f90611610565b610460610fee565b60606004805461032f906115ad565b600033816105718286610750565b9050838110156105d15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161044f565b6103e3828686840361081e565b6000336103c08185856109bc565b8342111561063c5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161044f565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861066b8c611069565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006106c682611091565b905060006106d6828787876110df565b9050896001600160a01b0316816001600160a01b0316146107395760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161044f565b6107448a8a8a61081e565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b036101009091041633146107ab5760405162461bcd60e51b815260040161044f90611610565b6001600160a01b0381166108105760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161044f565b6104aa81610f94565b505050565b6001600160a01b0383166108805760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161044f565b6001600160a01b0382166108e15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161044f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061094e8484610750565b905060001981146109b657818110156109a95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161044f565b6109b6848484840361081e565b50505050565b6001600160a01b038316610a205760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161044f565b6001600160a01b038216610a825760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161044f565b610a8d838383611107565b6001600160a01b03831660009081526020819052604090205481811015610b055760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161044f565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b3c9084906115f8565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b8891815260200190565b60405180910390a36109b6565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610bee57507f000000000000000000000000000000000000000000000000000000000000000046145b15610c1857507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60055460ff16610d055760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161044f565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610da55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161044f565b610db160008383611107565b8060026000828254610dc391906115f8565b90915550506001600160a01b03821660009081526020819052604081208054839290610df09084906115f8565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610e9a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161044f565b610ea682600083611107565b6001600160a01b03821660009081526020819052604090205481811015610f1a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161044f565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610f49908490611645565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60055460ff16156110345760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161044f565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d323390565b6001600160a01b03811660009081526006602052604090208054600181018255905b50919050565b600061051661109e610b95565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006110f08787878761114d565b915091506110fd8161123a565b5095945050505050565b60055460ff16156108195760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161044f565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156111845750600090506003611231565b8460ff16601b1415801561119c57508460ff16601c14155b156111ad5750600090506004611231565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611201573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661122a57600060019250925050611231565b9150600090505b94509492505050565b600081600481111561124e5761124e61165c565b14156112575750565b600181600481111561126b5761126b61165c565b14156112b95760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161044f565b60028160048111156112cd576112cd61165c565b141561131b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161044f565b600381600481111561132f5761132f61165c565b14156113885760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161044f565b600481600481111561139c5761139c61165c565b14156104aa5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161044f565b600060208083528351808285015260005b8181101561142257858101830151858201604001528201611406565b81811115611434576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461146157600080fd5b919050565b6000806040838503121561147957600080fd5b6114828361144a565b946020939093013593505050565b6000806000606084860312156114a557600080fd5b6114ae8461144a565b92506114bc6020850161144a565b9150604084013590509250925092565b6000602082840312156114de57600080fd5b5035919050565b6000602082840312156114f757600080fd5b6115008261144a565b9392505050565b600080600080600080600060e0888a03121561152257600080fd5b61152b8861144a565b96506115396020890161144a565b95506040880135945060608801359350608088013560ff8116811461155d57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561158d57600080fd5b6115968361144a565b91506115a46020840161144a565b90509250929050565b600181811c908216806115c157607f821691505b6020821081141561108b57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561160b5761160b6115e2565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015611657576116576115e2565b500390565b634e487b7160e01b600052602160045260246000fdfea264697066735822122066c88d141904d3045571969ed5d917d56b53804e6f8d322f7c6707de6b09453864736f6c63430008090033";

type PhloteVoteConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhloteVoteConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhloteVote__factory extends ContractFactory {
  constructor(...args: PhloteVoteConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PhloteVote";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhloteVote> {
    return super.deploy(overrides || {}) as Promise<PhloteVote>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PhloteVote {
    return super.attach(address) as PhloteVote;
  }
  connect(signer: Signer): PhloteVote__factory {
    return super.connect(signer) as PhloteVote__factory;
  }
  static readonly contractName: "PhloteVote";
  public readonly contractName: "PhloteVote";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhloteVoteInterface {
    return new utils.Interface(_abi) as PhloteVoteInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhloteVote {
    return new Contract(address, _abi, signerOrProvider) as PhloteVote;
  }
}
