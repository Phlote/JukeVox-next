/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { IPFSStorage, IPFSStorageInterface } from "../IPFSStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "key",
        type: "address",
      },
    ],
    name: "EntryDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "key",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "hashFunction",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "size",
        type: "uint8",
      },
    ],
    name: "EntrySet",
    type: "event",
  },
  {
    inputs: [],
    name: "clearEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getEntry",
    outputs: [
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "hashfunction",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "size",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_digest",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_hashFunction",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_size",
        type: "uint8",
      },
    ],
    name: "setEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102b0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631d91bad8146100465780634aa31d1a146100505780637db6a4e414610063575b600080fd5b61004e6100c4565b005b61004e61005e36600461020e565b61015a565b6100a161007136600461024a565b6001600160a01b031660009081526020819052604090208054600190910154909160ff8083169261010090041690565b6040805193845260ff928316602085015291169082015260600160405180910390f35b336000908152602081905260409020546101145760405162461bcd60e51b815260206004820152600d60248201526c616c726561647920656d70747960981b604482015260640160405180910390fd5b33600081815260208190526040808220828155600101805461ffff19169055517f37094446b5b4f4420f3371942cfa215d42d75ca1721ea30e7711cd7b35c2d78b9190a2565b604080516060808201835285825260ff85811660208085018281528784168688018181523360008181528086528a902089518155935160019094018054925188166101000261ffff1990931694909716939093171790945586518a8152918201929092529485019190915291927f631aa1496c76170e1d345cbad46551b5ce9e00454bc5058a321afa3e4c69be8f910160405180910390a250505050565b803560ff8116811461020957600080fd5b919050565b60008060006060848603121561022357600080fd5b83359250610233602085016101f8565b9150610241604085016101f8565b90509250925092565b60006020828403121561025c57600080fd5b81356001600160a01b038116811461027357600080fd5b939250505056fea264697066735822122000b43b95338ba10197acc93d5fe76000a6c40e7a6832c2f466f325b65ec604cb64736f6c63430008090033";

type IPFSStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IPFSStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IPFSStorage__factory extends ContractFactory {
  constructor(...args: IPFSStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "IPFSStorage";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IPFSStorage> {
    return super.deploy(overrides || {}) as Promise<IPFSStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): IPFSStorage {
    return super.attach(address) as IPFSStorage;
  }
  connect(signer: Signer): IPFSStorage__factory {
    return super.connect(signer) as IPFSStorage__factory;
  }
  static readonly contractName: "IPFSStorage";
  public readonly contractName: "IPFSStorage";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IPFSStorageInterface {
    return new utils.Interface(_abi) as IPFSStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPFSStorage {
    return new Contract(address, _abi, signerOrProvider) as IPFSStorage;
  }
}
